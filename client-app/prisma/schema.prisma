// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Result {
  PENDING
  SUCCESS
  REJECTED
  ERROR
}

model Account {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  user     User   @relation(fields: [user_id], references: [id])
  user_id  Int    @unique @map("user_id")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  username     String?
  avatar       Image?        @relation(fields: [avatar_id], references: [id])
  avatar_id    Int?          @map("avatar_id")
  queries      Query[]
  accounts     Account?
  subsctiption Subsctiption?
}

model Image {
  id         Int      @id @default(autoincrement())
  image_url  String
  created_at DateTime @default(now())
  users      User[]
  queries    Query[]
}

model Query {
  id         Int      @id @default(autoincrement())
  query      String
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int      @map("user_id")
  image      Image    @relation(fields: [image_id], references: [id])
  image_id   Int      @map("image_id")
  result     Result   @default(PENDING)
  content    String?
  used_token Int
  created_at DateTime @default(now())
}

model Subsctiption {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int      @unique @map("user_id")
  plan       Plan     @relation(fields: [plan_id], references: [id])
  plan_id    Int      @map("plan_id")
  created_at DateTime @default(now())
}

model Plan {
  id            Int            @id @default(autoincrement())
  name          String
  monthy_token  Int
  daily_token   Int
  price         Float
  subscriptions Subsctiption[]
}
